/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'Merienda';
  src: url("../fonts/Merienda-Bold.woff2") format("woff2");
  font-weight: 800;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Merienda';
  src: url("../fonts/Merienda-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Vampiro';
  src: url("../fonts/VampiroOne.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap; }

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

body {
  font-family: 'Merienda', 'Arial', serif;
  font-size: 12px;
  font-weight: 400; }
  body.hidden {
    overflow: hidden; }

li {
  list-style: none; }

a {
  display: block;
  text-decoration: none;
  cursor: pointer; }

button {
  cursor: pointer;
  border: none;
  outline: blue; }

img {
  max-width: 100%;
  height: auto; }

section {
  padding: 50px 0; }

.visually-hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px; }

.container {
  max-width: 1200px;
  padding: 0 20px;
  margin: 0 auto; }
  @media (max-width: 768px) {
    .container {
      padding: 0 15px; } }
  @media (max-width: 320px) {
    .container {
      padding: 0 10px; } }

.main {
  height: 100%;
  min-height: 100vh;
  background-color: #e5e5e5; }

.header {
  padding: 10px 0;
  background-color: rgba(28, 126, 255, 0.8); }
  .header__inner {
    display: flex;
    justify-content: space-between;
    align-items: center; }
  .header__logo {
    font-family: 'Merienda', 'Times New Roman', serif;
    color: #000;
    font-size: 32px;
    text-transform: uppercase;
    font-weight: 800;
    outline: blue;
    transition: all 0.5s cubic-bezier(0.5, 0.71, 0.71, 0.57); }
    @media (max-width: 768px) {
      .header__logo {
        font-size: 24px; } }
    @media (max-width: 320px) {
      .header__logo {
        font-size: 20px; } }
    .header__logo:hover {
      opacity: .5;
      color: #fff; }
    .header__logo:focus {
      outline: 1px solid blue; }
  .header__theme-select {
    font-family: 'Vampiro', serif;
    font-size: 18px;
    text-transform: uppercase;
    background-color: #298ee6;
    border: 1px solid #47a5fc;
    padding: 10px 10px;
    border-radius: 15px;
    transition: all .5s linear; }
    @media (max-width: 768px) {
      .header__theme-select {
        font-size: 15px; } }
    @media (max-width: 320px) {
      .header__theme-select {
        font-size: 12px; } }
    .header__theme-select:hover {
      background-color: #1e9df7;
      color: #f5f5f5; }
    .header__theme-select:focus {
      background-color: #0263c9;
      color: #fff;
      outline: 1px solid blue; }
    .header__theme-select:active {
      background-color: #80bfff;
      border: 1px solid #0263c9;
      color: blue; }

.form {
  display: flex;
  flex-direction: column;
  row-gap: 20px;
  max-width: 750px;
  margin: 0px auto;
  padding: 20px;
  background-color: rgba(158, 240, 255, 0.3);
  border-radius: 15px;
  box-shadow: 0 0 25px 0 #000; }
  .form__row {
    display: flex;
    flex-direction: column;
    row-gap: 10px; }
  .form__title {
    font-size: 18px; }
  .form__input {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 20px;
    border: 2px solid #57c7ff;
    background-color: transparent;
    border-radius: 5px;
    padding: 10px 20px 10px 10px;
    letter-spacing: 1px;
    outline: blue;
    transition: border-color .5s linear; }
    .form__input:hover {
      border-color: #1e9df7; }
    .form__input:focus {
      border-color: #0078f7; }
    .form__input::-moz-placeholder {
      font-size: 18px;
      text-transform: uppercase;
      letter-spacing: 1px; }
    .form__input:-ms-input-placeholder {
      font-size: 18px;
      text-transform: uppercase;
      letter-spacing: 1px; }
    .form__input::placeholder {
      font-size: 18px;
      text-transform: uppercase;
      letter-spacing: 1px; }
    @media (max-width: 768px) {
      .form__input {
        font-size: 16px; } }
    @media (max-width: 320px) {
      .form__input {
        font-size: 14px; } }
  .form__textarea {
    display: block;
    height: 100%;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 18px;
    letter-spacing: 1px;
    border: 2px solid #57c7ff;
    background-color: transparent;
    border-radius: 5px;
    padding: 10px 20px 10px 10px;
    resize: none;
    min-height: 100px;
    outline: blue;
    transition: border-color .5s linear; }
    .form__textarea:hover {
      border-color: #1e9df7; }
    .form__textarea:focus {
      border-color: #0078f7; }
    .form__textarea::-moz-placeholder {
      font-size: 18px;
      text-transform: uppercase;
      letter-spacing: 1px; }
    .form__textarea:-ms-input-placeholder {
      font-size: 18px;
      text-transform: uppercase;
      letter-spacing: 1px; }
    .form__textarea::placeholder {
      font-size: 18px;
      text-transform: uppercase;
      letter-spacing: 1px; }
  .form__submit {
    font-size: 18px;
    text-transform: uppercase;
    padding: 10px 20px;
    margin: 0 auto;
    text-align: center;
    border-radius: 10px;
    border: 2px solid transparent;
    background-color: rgba(41, 142, 230, 0.5);
    transition: all 0.5s linear; }
    .form__submit:hover {
      background-color: #1e9df7;
      color: #f5f5f5; }
    .form__submit:focus {
      background-color: #0263c9;
      color: #fff; }
    .form__submit:active {
      background-color: #80bfff;
      border: 2px solid #0263c9;
      color: #000; }

.tasks {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  row-gap: 20px;
  padding: 20px;
  margin: 0 auto; }
  @media (max-width: 768px) {
    .tasks {
      padding: 0 10px; } }
  .tasks__item {
    display: flex;
    width: 600px;
    flex-direction: column;
    background-color: rgba(158, 240, 255, 0.3);
    padding: 15px 20px 20px;
    border-radius: 25px;
    box-shadow: 0 0 10px 0 #000; }
    @media (max-width: 768px) {
      .tasks__item {
        padding: 5px 10px 10px; } }
  .tasks__title {
    font-size: 20px;
    margin-bottom: 10px;
    text-align: center; }
  .tasks__text {
    font-family: "Arial";
    font-size: 18px;
    margin-bottom: 20px; }
  .tasks__button {
    font-size: 18px;
    text-align: center;
    padding: 10px 20px;
    margin: 0 auto;
    border: 2px solid transparent;
    background-color: rgba(41, 142, 230, 0.5);
    transition: all 0.5s linear; }
    @media (max-width: 768px) {
      .tasks__button {
        padding: 5px 10px; } }
    .tasks__button:hover {
      background-color: #1e9df7;
      color: #f5f5f5; }
    .tasks__button:focus {
      background-color: #0263c9;
      color: #fff; }
    .tasks__button:active {
      background-color: #80bfff;
      border: 2px solid #0263c9;
      color: #000; }

.footer {
  padding: 20px 0;
  background-color: rgba(28, 126, 255, 0.8); }
  .footer__inner {
    display: flex;
    justify-content: flex-end; }

.copyright {
  display: flex;
  align-items: center;
  -moz-column-gap: 20px;
  column-gap: 20px; }
  @media (max-width: 768px) {
    .copyright {
      -moz-column-gap: 10px;
      column-gap: 10px; } }
  .copyright__item:nth-child(2) {
    padding-top: 5px; }
  .copyright__text {
    font-size: 24px; }
    @media (max-width: 768px) {
      .copyright__text {
        font-size: 16px; } }
  .copyright__link {
    outline: none;
    transition: all .3s linear; }
    .copyright__link:hover {
      transform: scale(1.05); }
    .copyright__link:focus {
      outline: 1px solid blue; }
    .copyright__link:active {
      transform: scale(1.05);
      opacity: .5; }
  .copyright__logo {
    width: 25px;
    height: 25px; }
    @media (max-width: 768px) {
      .copyright__logo {
        width: 20px;
        height: 20px; } }

.overlay-add-task, .overlay-delete-task {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  opacity: 1;
  visibility: hidden; }
  .overlay-add-task--show {
    opacity: 1;
    visibility: visible; }
  .overlay-add-task__wrapper, .overlay-delete-task__wrapper {
    display: flex;
    flex-direction: column;
    padding: 50px 20px 20px;
    background-color: #fff;
    border-radius: 0 60px 0 60px;
    max-width: 90%; }
  .overlay-add-task__title, .overlay-delete-task__title {
    font-size: 30px;
    margin-bottom: 20px; }
    @media (max-width: 768px) {
      .overlay-add-task__title, .overlay-delete-task__title {
        font-size: 28px; } }
    @media (max-width: 408px) {
      .overlay-add-task__title, .overlay-delete-task__title {
        font-size: 22px; } }
    @media (max-width: 320px) {
      .overlay-add-task__title, .overlay-delete-task__title {
        font-size: 18px; } }
  .overlay-add-task__button, .overlay-delete-task__confirm, .overlay-delete-task__cancel {
    font-size: 20px;
    text-transform: uppercase;
    align-self: center;
    padding: 10px 20px;
    border: 1px solid transparent;
    background-color: rgba(41, 142, 230, 0.5);
    color: #000; }
    .overlay-add-task__button:hover, .overlay-delete-task__confirm:hover, .overlay-delete-task__cancel:hover {
      background-color: #1e9df7;
      color: #f5f5f5; }
    .overlay-add-task__button:focus, .overlay-delete-task__confirm:focus, .overlay-delete-task__cancel:focus {
      background-color: #0263c9;
      color: #fff; }
    .overlay-add-task__button:active, .overlay-delete-task__confirm:active, .overlay-delete-task__cancel:active {
      background-color: #80bfff;
      border: 1px solid #0263c9;
      color: #000; }

.overlay-delete-task--show {
  opacity: 1;
  visibility: visible; }

.overlay-delete-task__inner-button {
  display: flex;
  -moz-column-gap: 20px;
  column-gap: 20px;
  align-self: flex-end; }
  @media (max-width: 320px) {
    .overlay-delete-task__inner-button {
      align-self: center; } }

.overlay-delete-task__confirm, .overlay-delete-task__cancel {
  border-radius: 7px; }
  @media (max-width: 408px) {
    .overlay-delete-task__confirm, .overlay-delete-task__cancel {
      font-size: 18px;
      padding: 5px 10px; } }
  @media (max-width: 320px) {
    .overlay-delete-task__confirm, .overlay-delete-task__cancel {
      font-size: 16px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
